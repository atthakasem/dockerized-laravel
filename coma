#!/bin/bash

web_server=apache
link_destination=/usr/local/bin/coma

case "$1" in
    # Container commands:
    build) sudo docker-compose up -d --build $web_server
    ;;
    up) sudo docker-compose up -d $web_server
    ;;
    down) docker-compose down
    ;;
    ps) docker-compose ps
    ;;

    # Service commands:
    composer)
    shift
    sudo docker-compose run --rm php composer "$@"
    ;;
    artisan)
    shift
    sudo docker-compose run --rm php php artisan "$@"
    ;;
    php) shift
    sudo docker-compose run --rm php "$@"
    ;;
    phpunit)
    shift
    sudo docker-compose run --rm phpunit "$@"
    ;;
    npm)
    shift
    sudo docker-compose run --rm npm "$@"
    ;;

    # Other commands:
    link) sudo ln -s $(pwd)/coma $link_destination
    ;;
    unlink) which coma | sudo xargs rm
    ;;
    setup)
    coma build && \
    coma composer install && \
    coma env && \
    coma npm install && \
    coma npm run dev
    ;;
    env)
    FILE="$(pwd)/src/.env"
    if [ ! -f "$FILE" ]; then
        cp "$(pwd)/src/.env.example" "$(pwd)/src/.env"
        docker-compose run --rm php php artisan key:generate
    fi
    ;;

    # Default command:
    *) echo "Container commands:
    build       - (Re)build and start the web server image and its dependents
    up          - Start the web server container and its dependents
    down        - Shut down all containers
    ps          - List running containers

Service commands:
    composer    - Run the PHP container and call composer
    artisan     - Run the PHP container and call artisan
    php         - Run the PHP container
    phpunit     - Run the PHPUnit container
    npm         - Run the npm container

Other commands:
    link        - Create a coma symlink in /usr/local/bin/
    unlink      - Delete the coma symlink from the machine
    setup       - Set up the dev environment by starting containers and installing dependencies
    env         - Create .env from .env.example and generate an app key"
    ;;
esac
