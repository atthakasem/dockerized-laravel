#!/bin/bash

command_name=coma
web_server=apache
port=8080
url=http://localhost:$port
link_destination=/usr/local/bin/$command_name

uds_handler='(SetHandler "proxy:unix:..*)'
uds_config='(ADD uds.conf ..*)'
tcp_handler='(SetHandler "proxy:fcgi:..*)'
tcp_config='(ADD tcp.conf ..*)'

case "$1" in
    # Container commands:
    build)
    sudo docker-compose up -d --build $web_server && \
    echo "$web_server is running: $url" && \
    explorer.exe $url
    ;;
    up)
    sudo docker-compose up -d $web_server && \
    echo "$web_server is running: $url" && \
    explorer.exe $url
    ;;
    down) docker-compose down
    ;;
    ps) docker-compose ps
    ;;

    # Service commands:
    composer)
    shift
    sudo docker-compose run --rm php composer "$@"
    ;;
    artisan)
    shift
    sudo docker-compose run --rm php php artisan "$@"
    ;;
    php) shift
    sudo docker-compose run --rm php "$@"
    ;;
    phpunit)
    shift
    sudo docker-compose run --rm phpunit "$@"
    ;;
    npm)
    shift
    sudo docker-compose run --rm npm "$@"
    ;;
    shell)
    shift
    sudo docker-compose run --rm $1 /bin/sh
    ;;

    # Other commands:
    link) sudo ln -s $(pwd)/$command_name $link_destination
    ;;
    unlink) which $command_name | sudo xargs rm
    ;;
    setup)
    $command_name build && \
    $command_name composer install && \
    $command_name env ; \
    $command_name npm install && \
    $command_name npm run dev && \
    git remote rm origin
    ;;
    env)
    FILE="$(pwd)/src/.env"
    if [ ! -f "$FILE" ]; then
        cp "$(pwd)/src/.env.example" "$(pwd)/src/.env"
        docker-compose run --rm php php artisan key:generate
    fi
    ;;
    tcp)
    sed -i -E "s~.*$tcp_handler~        \1~" services/apache/httpd-vhosts.conf && \
    sed -i -E "s~.*$tcp_config~\1~" services/php/Dockerfile && \
    sed -i -E "s~.*$uds_handler~        # \1~" services/apache/httpd-vhosts.conf && \
    sed -i -E "s~.*$uds_config~# \1~" services/php/Dockerfile && \
    $command_name build
    ;;
    uds)
    sed -i -E "s~.*$tcp_handler~        # \1~" services/apache/httpd-vhosts.conf && \
    sed -i -E "s~.*$tcp_config~# \1~" services/php/Dockerfile && \
    sed -i -E "s~.*$uds_handler~        \1~" services/apache/httpd-vhosts.conf && \
    sed -i -E "s~.*$uds_config~\1~" services/php/Dockerfile && \
    $command_name build
    ;;

    # Default command:
    *) echo "Container commands:
    build           - (Re)build and start the web server image and its dependents
    up              - Start the web server container and its dependents
    down            - Shut down all containers
    ps              - List running containers

Service commands:
    composer        - Run the PHP container and call composer
    artisan         - Run the PHP container and call artisan
    php             - Run the PHP container
    phpunit         - Run the PHPUnit container
    npm             - Run the npm container
    shell [SERVICE] - Open the shell of a container

Other commands:
    link        - Create a $command_name symlink in /usr/local/bin/
    unlink      - Delete the $command_name symlink from the machine
    setup       - Set up the dev environment by starting containers and installing dependencies
    env         - Create .env from .env.example and generate an app key
    uds         - Switch to PHP-FPM Unix socket connection
    tcp         - Switch to PHP-FPM TCP connection"
    ;;
esac
